{"version":3,"sources":["UIElements/Statistics.Module.css","elements/Tower.Module.css","UIElements/Intro.Module.css","UIElements/Warning.Module.css","elements/Pin.Module.css","elements/Ring.Module.css","UIElements/Backdrop.Module.css","UIElements/Button.Module.css","elements/Ring.js","elements/Pin.js","elements/Tower.js","UIElements/Button.js","UIElements/Intro.js","UIElements/Backdrop.js","UIElements/Statistics.js","UIElements/Warning.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Ring","props","className","classes","style","width","size","onClick","selectRing","pinName","Pin","name","selectPin","Tower","rings","length","map","ring","index","Rings","children","Button","click","Intro","useState","selectedAmount","setSelectedamount","Navigation","for","id","value","onChange","e","target","changeAmount","startGame","Backdrop","ReactDOM","createPortal","document","getElementById","Statistics","minNumber","exponentiation","number","initialAmount","paragraph","isGameOver","count","Paragraph","Congrats","window","location","reload","Warning","App","1","2","3","towers","setTowers","ringAndTower","setRingAndTower","message","setMessage","counter","setCounter","initialAmountOfRings","setInitialAmountOfRings","setIsGameOver","isModalVisible","setIsModalVisible","updateMessage","mssg","setTimeout","updateSelectedRing","towerNumber","Math","min","filledTower","reducedTower","filter","item","push","sort","a","b","prevState","TowerComponents","i","initialState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.41d49f1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"_2myhe898dhOKKF9JHFpvJ6\",\"Paragraph\":\"_308cyYnXlHi1JaI0cWmMRR\",\"Congrats\":\"Z1qtK-DVsX5U3oRDgfb5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tower\":\"hpkrhATJRnxBnmNdZxT9g\",\"Rings\":\"_2lg0VQEUt1fA3skv5WYJuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"_30iRmxr2E3lgI4wSb2i0gJ\",\"Navigation\":\"_5PH043ds5gD1m_qo3jnHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Warning\":\"_2Isi6iD6Yuh_X2Wv0n7mwE\",\"Paragraph\":\"OOdvfVy-VznXtEfQe3JiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pin\":\"_3wCzB8zxgV79O9lT8dH4mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ring\":\"_2vLmou4bu4yifYf-SQTtcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"wDdlR1WD2U8gFQQ6wcVk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"_2n7TQmdpbmzsRLp4E_cUXj\"};","import React from 'react';\r\n\r\nimport classes from './Ring.Module.css';\r\n\r\nconst Ring = (props) => {\r\n  return (\r\n    <div\r\n      className={classes.Ring}\r\n      style={{ width: `${props.size * 7 + 15}%` }}\r\n      onClick={() => props.selectRing(props.size, props.pinName)}\r\n    >\r\n      {/* {props.size} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ring;\r\n","import React from 'react';\r\n\r\nimport classes from './Pin.Module.css';\r\nimport Ring from './Ring'\r\n\r\nconst Pin = (props) => {\r\n  return ( \r\n    <div className={classes.Pin} name={props.name} onClick={() => props.selectPin(props.name)}>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Pin;","import React from 'react';\r\nimport Pin from './Pin';\r\nimport Ring from './Ring';\r\n\r\nimport classes from './Tower.Module.css';\r\n\r\nconst Tower = (props) => {\r\n  let rings = props.rings;\r\n\r\n\r\n  if (rings.length > 0) {\r\n    rings = rings.map((ring, index) => <Ring key={ring} size={ring} selectRing={props.selectRing} pinName={props.name}/>);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Tower}>\r\n      <Pin name={props.name} selectPin={props.selectPin}/>\r\n      <div className={classes.Rings}>\r\n        {rings}\r\n        </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tower;\r\n","import React from 'react';\r\n\r\nimport classes from './Button.Module.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className={classes.Button} onClick={props.click}>{props.children}</button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\n\r\nimport Button from './Button'\r\n\r\nimport classes from './Intro.Module.css';\r\n\r\nconst Intro = (props) => {\r\n\r\n  const [selectedAmount,  setSelectedamount]  = useState(3);\r\n\r\n\r\n  const changeAmount = (e) => {\r\n    setSelectedamount(+e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Intro}>\r\n      <h1>Wieże Hanoi</h1>\r\n      <p>\r\n        {`Celem gry jest przestawienie wieży z pierwszego stosu na trzeci - z\r\n        zachowaniem \r\n        takiej samej kolejności krążków. Należy przekładać po jednym\r\n        krążku,\r\n        wybierając najpierw najmniejszy krążek z danego stosu, a\r\n        następnie wskazując pin stosu,\r\n        na który ma zostać przeniesiony. Nie wolno układać większego krążka na mniejszym.\r\n        Dozwolone jest przesunięcie dowolnego krążka na dowolony stos - nawet na taki,\r\n        na którym nie ma jeszcze żadnego krążka.`}\r\n      </p>\r\n      <div className={classes.Navigation}>\r\n        <label for='amount'>Wybierz jaką ilością krążków chcesz zagrać:</label>\r\n        <select name='amount' id='amount'  value={selectedAmount} onChange={(e) => changeAmount(e)}>\r\n          <option value='3'> 3</option>\r\n          <option value='4'> 4</option>\r\n          <option value='5'> 5</option>\r\n          <option value='6'> 6</option>\r\n          <option value='7'> 7</option>\r\n          <option value='8'> 8</option>\r\n          <option value='9'> 9</option>\r\n          <option value='10'> 10</option>\r\n        </select>\r\n        <Button click={() => props.startGame(selectedAmount)}>Zacznij grę!</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Backdrop.Module.css';\r\nimport Intro from './Intro';\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    ReactDOM.createPortal(\r\n      <div className={classes.Backdrop}>\r\n        {props.children}\r\n      </div>, document.getElementById('backdrop')\r\n    )\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport Button from './Button';\r\n\r\nimport classes from './Statistics.Module.css';\r\n\r\nconst Statistics = (props) => {\r\n  function exponentiation(number) {\r\n    let x = 2;\r\n    if (number === 1) {\r\n      return x;\r\n    }\r\n    return x * exponentiation(number - 1);\r\n  }\r\n\r\n  const minNumber = exponentiation(props.initialAmount) - 1;\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  let paragraph = ''\r\n  if (props.isGameOver && minNumber === props.count) {\r\n    paragraph = `Rozwiązałeś układankę z wykorzystaniem możliwie najmniejszej ilości\r\n    ruchów!`\r\n  } else if (props.isGameOver && minNumber < props.count) {\r\n    paragraph = `Rozwiązałeś układankę!`\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.Statistics}>\r\n        <p className={classes.Paragraph}>\r\n          Liczba Twoich ruchów: <strong>{props.count}</strong>\r\n        </p>\r\n        <p className={classes.Paragraph}>\r\n          Minimalna liczba ruchów, potrzebna do rozwiązania tej układanki:{' '}\r\n          <strong>{minNumber}</strong>\r\n        </p>\r\n      </div>\r\n      {props.isGameOver && (\r\n        <Backdrop >\r\n          <div className={classes.Congrats}>\r\n            <h1>Gratulacje!</h1>\r\n            <p> {paragraph}\r\n            </p>\r\n            <Button click={reloadPage}>Zagraj jeszcze raz</Button>\r\n          </div>\r\n        </Backdrop>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './Warning.Module.css';\r\n\r\nconst Warning = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className={classes.Warning}>\r\n      <p className={classes.Paragraph}>{props.children}</p>\r\n    </div>,\r\n    document.getElementById('warning')\r\n  );\r\n};\r\n\r\nexport default Warning;\r\n","import { useState } from 'react';\nimport './App.css';\nimport './App.css';\n\nimport Pin from './elements/Pin';\nimport Ring from './elements/Ring';\nimport Tower from './elements/Tower';\nimport Backdrop from './UIElements/Backdrop';\nimport Intro from './UIElements/Intro';\nimport Statistics from './UIElements/Statistics';\nimport Warning from './UIElements/Warning';\n\nfunction App() {\n  const [towers, setTowers] = useState({\n    1: [],\n    2: [],\n    3: [],\n  });\n  const [ringAndTower, setRingAndTower] = useState([0, 0]);\n  const [message, setMessage] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [initialAmountOfRings, setInitialAmountOfRings] = useState(3);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(true);\n\n  const startGame = (number) => {\n    const initialState = [];\n    for (let i = 0; i < number; i++) {\n      initialState.push(i + 1);\n    }\n    setTowers((prevState) => ({\n      ...prevState,\n      [1]: initialState,\n    }));\n    setInitialAmountOfRings(number);\n    setIsModalVisible(false);\n  };\n\n  const updateMessage = (mssg) => {\n    setMessage(mssg);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n\n  const updateSelectedRing = (size, towerNumber) => {\n    if (size !== Math.min(...towers[`${towerNumber}`])) {\n      updateMessage('Wybierz najmniejszy krążek ze stosu!');\n    } else {\n      setRingAndTower([size, towerNumber]);\n    }\n  };\n\n  const selectPin = (number) => {\n    if (ringAndTower[0] > 0) {\n      const filledTower = [...towers[number]];\n\n      if (ringAndTower[0] < Math.min(...filledTower)) {\n        let reducedTower = [...towers[ringAndTower[1]]];\n        reducedTower = reducedTower.filter((item) => item !== ringAndTower[0]);\n\n        filledTower.push(ringAndTower[0]);\n        filledTower.sort(function (a, b) {\n          return a - b;\n        });\n\n        setTowers((prevState) => ({\n          ...prevState,\n          [ringAndTower[1]]: reducedTower,\n          [`${number}`]: filledTower,\n        }));\n        setRingAndTower([0, 0]);\n        setCounter((prevState) => prevState + 1);\n      } else {\n        updateMessage('Nie możesz kłaść większego krążka na mniejszy');\n      }\n    } else {\n      updateMessage('Najpierw wybierz krążek, który chcesz przesunąć');\n    }\n  };\n\n  let TowerComponents = [];\n  for (let i = 1; i < 4; i++) {\n    TowerComponents.push(\n      <Tower\n        key={i}\n        name={i}\n        rings={towers[`${i}`]}\n        selectRing={updateSelectedRing}\n        selectPin={selectPin}\n      />\n    );\n  }\n\n\n  if (towers['1'].length === 0 && towers['2'].length === 0 & towers['3'].length === initialAmountOfRings) {\n    setTimeout(() => {\n      setIsGameOver(true);\n    }, 1000);\n  }\n\n  return (\n    <>\n      {isModalVisible && (\n        <Backdrop >\n          <Intro startGame={startGame} />\n        </Backdrop>\n      )}\n      <div className='wrapper'>\n        {TowerComponents}\n        <Statistics initialAmount={initialAmountOfRings} count={counter} isGameOver={isGameOver} />\n      </div>\n      {message !== '' && <Warning>{message}</Warning>}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}