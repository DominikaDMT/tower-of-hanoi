{"version":3,"sources":["UIElements/Statistics.Module.css","elements/Ring.Module.css","elements/Tower.Module.css","UIElements/Intro.Module.css","UIElements/Warning.Module.css","elements/Pin.Module.css","UIElements/Backdrop.Module.css","UIElements/Button.Module.css","elements/Ring.js","elements/Pin.js","elements/Tower.js","UIElements/Button.js","UIElements/Intro.js","UIElements/Backdrop.js","UIElements/Statistics.js","UIElements/Warning.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Ring","props","ratio","allClasses","initialAmount","selectedRing","size","classes","active","id","className","style","width","onClick","selectRing","pinName","draggable","onDragStart","e","dataTransfer","setData","target","effectAllowed","dragging","Pin","name","selectPin","Tower","rings","length","map","ring","index","onDragEnter","types","preventDefault","handleDragEnter","onDragOver","handleDragOver","onDrop","ringId","getData","find","key","handleDrop","Rings","zIndex","children","Button","click","Intro","useState","selectedAmount","setSelectedamount","Navigation","for","value","onChange","changeAmount","startGame","Backdrop","ReactDOM","createPortal","document","getElementById","Statistics","minNumber","exponentiation","number","reloadPage","window","location","reload","paragraph","isGameOver","count","Paragraph","Btn","Congrats","RestartGameBtn","Warning","App","1","2","3","towers","setTowers","ringAndTower","setRingAndTower","message","setMessage","counter","setCounter","initialAmountOfRings","setInitialAmountOfRings","setIsGameOver","isModalVisible","setIsModalVisible","updateMessage","mssg","setTimeout","updateSelectedRing","towerNumber","Math","min","filledTower","reducedTower","filter","item","push","sort","a","b","prevState","TowerComponents","i","initialState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.b60244cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"_2myhe898dhOKKF9JHFpvJ6\",\"Paragraph\":\"_308cyYnXlHi1JaI0cWmMRR\",\"Congrats\":\"Z1qtK-DVsX5U3oRDgfb5m\",\"Btn\":\"_2EBDnVl0SKmZQBWEhaSrPY\",\"RestartGameBtn\":\"_20Ogm1_o7TWjJNGOG1EpJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ring\":\"_2vLmou4bu4yifYf-SQTtcM\",\"active\":\"_1lNdiaajBLGHGEWM3ogIeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tower\":\"hpkrhATJRnxBnmNdZxT9g\",\"Rings\":\"_2lg0VQEUt1fA3skv5WYJuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"_30iRmxr2E3lgI4wSb2i0gJ\",\"Navigation\":\"_5PH043ds5gD1m_qo3jnHp\",\"Button\":\"_2U9l0hIs9rQjsCiJ2FGVxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Warning\":\"_2Isi6iD6Yuh_X2Wv0n7mwE\",\"Paragraph\":\"OOdvfVy-VznXtEfQe3JiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pin\":\"_3wCzB8zxgV79O9lT8dH4mn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"wDdlR1WD2U8gFQQ6wcVk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"_2n7TQmdpbmzsRLp4E_cUXj\"};","import React from 'react';\r\n\r\nimport classes from './Ring.Module.css';\r\n\r\nconst Ring = (props) => {\r\n  let ratio;\r\n  if (props.initialAmount === 3) {\r\n    ratio = 20;\r\n  } else if (props.initialAmount < 6) {\r\n    ratio = 15;\r\n  } else {\r\n    ratio = 10;\r\n  }\r\n\r\n  let allClasses;\r\n  if (props.selectedRing === props.size) {\r\n    allClasses = `${classes.Ring} ${classes.active}`\r\n  } else {\r\n    allClasses = `${classes.Ring}`\r\n  }\r\n\r\n  const dragging = (e) => {\r\n    e.dataTransfer.setData('text/plain', `${e.target.id}`);\r\n    e.dataTransfer.effectAllowed ='move';\r\n    props.selectRing(props.size, props.pinName)\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id={props.size}\r\n      className={allClasses}\r\n      style={{ width: `${props.size * ratio + 15}%` }}\r\n      onClick={() => props.selectRing(props.size, props.pinName)}\r\n      draggable={true} onDragStart={(e) => dragging(e)}\r\n    >\r\n      {/* {props.size} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ring;\r\n","import React from 'react';\r\n\r\nimport classes from './Pin.Module.css';\r\nimport Ring from './Ring'\r\n\r\nconst Pin = (props) => {\r\n  return ( \r\n    <div className={classes.Pin} name={props.name} onClick={() => props.selectPin(props.name)}>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Pin;","import React from 'react';\r\nimport Pin from './Pin';\r\nimport Ring from './Ring';\r\n\r\nimport classes from './Tower.Module.css';\r\n\r\nconst Tower = (props) => {\r\n  let rings = props.rings;\r\n\r\n  if (rings.length > 0) {\r\n    rings = rings.map((ring, index) => (\r\n      <Ring\r\n        key={ring}\r\n        size={ring}\r\n        selectRing={props.selectRing}\r\n        pinName={props.name}\r\n        initialAmount={props.initialAmount}\r\n        selectedRing={props.selectedRing}\r\n      />\r\n    ));\r\n  }\r\n\r\n  const handleDragEnter = (e) => {\r\n    if (e.dataTransfer.types[0] === 'text/plain') {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  const handleDragOver = (e) => {\r\n    if (e.dataTransfer.types[0] === 'text/plain') {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    const ringId = e.dataTransfer.getData('text/plain');\r\n    if (rings.find((ring) => ring.key === ringId)) {\r\n      return;\r\n    }\r\n    props.selectPin(props.name);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Tower}>\r\n      <Pin name={props.name} selectPin={props.selectPin} />\r\n      <div\r\n        onDragEnter={(e) => handleDragEnter(e)}\r\n        onDragOver={(e) => handleDragOver(e)}\r\n        onDrop={(e) => handleDrop(e)}\r\n        className={classes.Rings}\r\n        style={{ zIndex: 5 }}\r\n      >\r\n        {rings}\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tower;\r\n","import React from 'react';\r\n\r\nimport classes from './Button.Module.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className={classes.Button} onClick={props.click}>{props.children}</button>\r\n  );\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\n\r\nimport Button from './Button'\r\n\r\nimport classes from './Intro.Module.css';\r\n\r\nconst Intro = (props) => {\r\n\r\n  const [selectedAmount,  setSelectedamount]  = useState(3);\r\n\r\n\r\n  const changeAmount = (e) => {\r\n    setSelectedamount(+e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Intro}>\r\n      <h1>Wieże Hanoi</h1>\r\n      <p>\r\n        {`Celem gry jest przestawienie wieży z pierwszego stosu na trzeci - z\r\n        zachowaniem \r\n        takiej samej kolejności krążków. Należy przekładać po jednym\r\n        krążku,\r\n        wybierając najpierw najmniejszy krążek z danego stosu, a\r\n        następnie wskazując pin stosu,\r\n        na który ma zostać przeniesiony. Nie wolno układać większego krążka na mniejszym.\r\n        Dozwolone jest przesunięcie dowolnego krążka na dowolony stos - nawet na taki,\r\n        na którym nie ma jeszcze żadnego krążka.`}\r\n      </p>\r\n      <div className={classes.Navigation}>\r\n        <label for='amount'>Wybierz jaką ilością krążków chcesz zagrać:</label>\r\n        <select name='amount' id='amount'  value={selectedAmount} onChange={(e) => changeAmount(e)}>\r\n          <option value='3'> 3</option>\r\n          <option value='4'> 4</option>\r\n          <option value='5'> 5</option>\r\n          <option value='6'> 6</option>\r\n          <option value='7'> 7</option>\r\n        </select>\r\n        <Button click={() => props.startGame(selectedAmount)}>Zacznij grę!</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Backdrop.Module.css';\r\nimport Intro from './Intro';\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    ReactDOM.createPortal(\r\n      <div className={classes.Backdrop}>\r\n        {props.children}\r\n      </div>, document.getElementById('backdrop')\r\n    )\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport Backdrop from './Backdrop';\r\nimport Button from './Button';\r\n\r\nimport classes from './Statistics.Module.css';\r\n\r\nconst Statistics = (props) => {\r\n  function exponentiation(number) {\r\n    let x = 2;\r\n    if (number === 1) {\r\n      return x;\r\n    }\r\n    return x * exponentiation(number - 1);\r\n  }\r\n\r\n  const minNumber = exponentiation(props.initialAmount) - 1;\r\n\r\n  const reloadPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  let paragraph = '';\r\n  if (props.isGameOver && minNumber === props.count) {\r\n    paragraph = `Rozwiązałeś układankę z wykorzystaniem możliwie najmniejszej ilości\r\n    ruchów - ${minNumber}!`;\r\n  } else if (props.isGameOver && minNumber < props.count) {\r\n    paragraph = `Rozwiązałeś układankę w ${props.count} ruchach! Następnym razem postaraj się rozwiąć ją w ${minNumber} ruchach.`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.Statistics}>\r\n        <p className={classes.Paragraph}>\r\n          Liczba Twoich ruchów: <strong>{props.count}</strong>\r\n        </p>\r\n        <p className={classes.Paragraph}>\r\n          Minimalna liczba ruchów, potrzebna do rozwiązania tej układanki: <strong>{minNumber}</strong>\r\n        </p>\r\n        <div className={classes.Btn}>\r\n        <Button click={reloadPage}>Zacznij grę od nowa</Button>\r\n        </div>\r\n      </div>\r\n      {props.isGameOver && (\r\n        <Backdrop>\r\n          <div className={classes.Congrats}>\r\n            <h1>Gratulacje!</h1>\r\n            <p> {paragraph}</p>\r\n            <div className={classes.RestartGameBtn}>\r\n              <Button click={reloadPage}>Zagraj jeszcze raz</Button>\r\n            </div>\r\n          </div>\r\n        </Backdrop>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './Warning.Module.css';\r\n\r\nconst Warning = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className={classes.Warning}>\r\n      <p className={classes.Paragraph}>{props.children}</p>\r\n    </div>,\r\n    document.getElementById('warning')\r\n  );\r\n};\r\n\r\nexport default Warning;\r\n","import { useState } from 'react';\nimport './App.css';\nimport './App.css';\n\nimport Pin from './elements/Pin';\nimport Ring from './elements/Ring';\nimport Tower from './elements/Tower';\nimport Backdrop from './UIElements/Backdrop';\nimport Intro from './UIElements/Intro';\nimport Statistics from './UIElements/Statistics';\nimport Warning from './UIElements/Warning';\n\nfunction App() {\n  const [towers, setTowers] = useState({\n    1: [],\n    2: [],\n    3: [],\n  });\n  const [ringAndTower, setRingAndTower] = useState([0, 0]);\n  const [message, setMessage] = useState('');\n  const [counter, setCounter] = useState(0);\n  const [initialAmountOfRings, setInitialAmountOfRings] = useState(3);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(true);\n\n  const startGame = (number) => {\n    const initialState = [];\n    for (let i = 0; i < number; i++) {\n      initialState.push(i + 1);\n    }\n    setTowers((prevState) => ({\n      ...prevState,\n      [1]: initialState,\n    }));\n    setInitialAmountOfRings(number);\n    setIsModalVisible(false);\n  };\n\n  const updateMessage = (mssg) => {\n    setMessage(mssg);\n    setTimeout(() => {\n      setMessage('');\n    }, 3000);\n  };\n\n  const updateSelectedRing = (size, towerNumber) => {\n    if (size !== Math.min(...towers[`${towerNumber}`])) {\n      updateMessage('Wybierz najmniejszy krążek ze stosu!');\n      setRingAndTower([0, 0]);\n    } else {\n      setRingAndTower([size, towerNumber]);\n    }\n  };\n\n  const selectPin = (number) => {\n    if (ringAndTower[0] > 0) {\n      const filledTower = [...towers[number]];\n\n      if (ringAndTower[0] < Math.min(...filledTower)) {\n        let reducedTower = [...towers[ringAndTower[1]]];\n        reducedTower = reducedTower.filter((item) => item !== ringAndTower[0]);\n\n        filledTower.push(ringAndTower[0]);\n        filledTower.sort(function (a, b) {\n          return a - b;\n        });\n\n        setTowers((prevState) => ({\n          ...prevState,\n          [ringAndTower[1]]: reducedTower,\n          [`${number}`]: filledTower,\n        }));\n        setRingAndTower([0, 0]);\n        setCounter((prevState) => prevState + 1);\n      } else {\n        updateMessage('Nie możesz kłaść większego krążka na mniejszy');\n      }\n    } else {\n      updateMessage('Najpierw wybierz krążek, który chcesz przesunąć');\n    }\n  };\n\n\n\n  if (towers['1'].length === 0 && towers['2'].length === 0 & towers['3'].length === initialAmountOfRings) {\n    setTimeout(() => {\n      setIsGameOver(true);\n    }, 1000);\n  }\n\n  let TowerComponents = [];\n  for (let i = 1; i < 4; i++) {\n    TowerComponents.push(\n      <Tower\n        key={i}\n        name={i}\n        rings={towers[`${i}`]}\n        selectRing={updateSelectedRing}\n        selectPin={selectPin}\n        initialAmount={initialAmountOfRings}\n        selectedRing={ringAndTower[0]}\n      />\n    );\n  }\n\n  return (\n    <>\n      {isModalVisible && (\n        <Backdrop >\n          <Intro startGame={startGame} />\n        </Backdrop>\n      )}\n      <div className='wrapper'>\n        {TowerComponents}\n        <Statistics initialAmount={initialAmountOfRings} count={counter} isGameOver={isGameOver} />\n      </div>\n      {message !== '' && <Warning>{message}</Warning>}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}